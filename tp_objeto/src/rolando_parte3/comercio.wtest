import personajes.*
import artefactos.*
import hechiceria.*
describe "test del comercio dentro del juego"{
	
			
	test "el precio de lista de un hechizo de logo cuyo nombre es 'alacachula cachicomula' es 22"{
		const alacachula = new Logos(nombre="alacachula cachicomula")
	
		assert.equals(alacachula.precio(),22)
	}
	
	test "Xenia compra el hechizo por un hechizo básico. le sale gratis"{
		const xenia = new Personaje(hechizoPreferido = alacachula);
		const mockHnos = new Comerciante(tipoComerciante = tipoComercianteImpuestoGanancia)
		xenia.compra(mockHnos,hechizoBasico)
		assert.equals(xenia.monedas(),100)
	}
	
	test "Thor compra el hechizo por el hechizo de logos “alacachula cachicomula”, le quedan 83 monedas"{
		const mockHnos = new Comerciante(tipoComerciante = tipoComercianteImpuestoGanancia);
		thor.compra(mockHnos,alacachula)
		assert.equals(thor.monedas(),83)
	}
	
	test "thor compra dos veces el mismo hechizo básico"{
		const thor = new Personaje(hechizoPreferido = hechizoBasico);
		const mockHnos = new Comerciante(tipoComerciante = tipoComercianteImpuestoGanancia)
		thor.compra(mockHnos,hechizoBasico)
		thor.compra(mockHnos,hechizoBasico)
		assert.equals(thor.monedas(),90)
		
	}
	
	test "Loki comienza con 5 monedas. Quiere comprar el hechizo por el de 'alacachula cachicomula' y no puede"{
		const mockHnos = new Comerciante(tipoComerciante = tipoComercianteImpuestoGanancia)
		var loki = new Personaje(hechizoPreferido = hechizoBasico, monedas=5);
		conat hechizoAnterior = loki.hechizoPreferido()
		loki.compra(mockHnos,alacachula)
		assert.equals(loki.hechizoPreferido(),hechizoAnterior)
	}
	
	test "precio de un arma es 0"{
		assert.equals(new ArmaDelDestino().precio(),0)
	}
	
	test "precio de un collar con 5 perlas es 10s"{
		assert.equals(new CollarDivino(cantDePerlas=5).precio(),10)
	}
	
	test "precio de una armadura es sin refuerzo es 2"{
		assert.equals(new Armadura().precio(),2)
	}
	
	test "precio de una armadura con cota de poder 5, es 2.5"{
		assert.equals(new Armadura(refuerzo=new CotaDeMalla(poder=5)).precio(),2.5)
	}

	
	test "Xenia compra a mocksHnos una espada, un collar divino (de 5 perlas), una armadura sin refuerzo y otra armadura con malla de cota cuyo valor de lucha es 5, le quedan 85.5 monedas"{
		
		xenia.compra(mockHnos,new ArmaDelDestino())
		xenia.compra(mockHnos,new CollarDivino(cantDePerlas=5))
		xenia.compra(mockHnos,new Armadura())
		xenia.compra(mockHnos,new Armadura(refuerzo=new CotaDeMalla(poder=5)))
		
		assert.equals(xenia.monedas(),85.5)
	}
	
	test "Xenia compra a mocksHnos una espada, un collar divino (de 5 perlas), una armadura sin refuerzo y otra armadura con malla de cota cuyo valor de lucha es 5, tiene 4 artefactos"{		
		xenia.compra(mockHnos, new ArmaDelDestino())
		xenia.compra(mockHnos, new CollarDivino(cantDePerlas=5))
		xenia.compra(mockHnos, new Armadura())
		xenia.compra(mockHnos, new Armadura(refuerzo=new CotaDeMalla(poder=5)))
		
		assert.equals(xenia.cantidadDeArtefactos(),4)
	}
	
	test "Thor compra una armadura con bendición como refuerzo, y una armadura reforzada con el hechizo alacachula, le quedan 74 monedas"{
		thor.compra(mockHnos, new Armadura(refuerzo=bendicion))
		thor.compra(mockHnos, new Armadura(refuerzo=alacachula))
		
		assert.equals(thor.monedas(),74)
	}	
	
	test "Loki quiere comprar el espejo, no puede"{
		loki.compra(mockHnos, espejoFantastico)
	
		assert.notThat(loki.tenes(espejoFantastico))
	}	
	
	test "Xenia compra un libro de hechizos que contiene el hechizo de logos de nombre “alacachula cachicomula” y el hechizo básico, le quedan 69 monedas"{
		
		const libro = new LibroDeHechizos(hechizos=[alacachula,hechizoBasico])
		xenia.compra(mockHnos, libro)
		assert.equals(xenia.monedas(),69)

	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a Pastoriza, le quedan 89.1"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		var pastoriza = new Comerciante(tipoComerciante = new TipoComercianteIndependiente(porcentajeComision=9))
		ursula.compra(pastoriza,new MascaraOscura())
		assert.equals(ursula.monedas(),89.1)	
	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a prieto, le quedan 87.9"{
		const prieto = new Comerciante(tipoComerciante = tipoComercianteRegistrado)
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		ursula.compra(prieto,new MascaraOscura())
		assert.equals(ursula.monedas(),87.9)	
	}	
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a fermepin, le quedan 88.25"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		ursula.compra(fermepin,new MascaraOscura())
		assert.equals(ursula.monedas(),88.25)	
	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a Pastoriza recategorizada, le quedan 88.2"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		pastoriza = new Comerciante(tipoComerciante = new TipoComercianteIndependiente(porcentajeComision=9))
		pastoriza.recategorizate()
		ursula.compra(pastoriza,new MascaraOscura())
		assert.equals(ursula.monedas(),88.2)	
	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a Pastoriza recategorizada 2 veces, le quedan 87.9"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		var pastoriza = new Comerciante(tipoComerciante = new TipoComercianteIndependiente(porcentajeComision=9))
		pastoriza.recategorizate()
		pastoriza.recategorizate()
		ursula.compra(pastoriza,new MascaraOscura())
		assert.equals(ursula.monedas(),87.9)	
	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a prieto recategorizada, le quedan 88.25"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		var prieto = new Comerciante(tipoComerciante = tipoComercianteRegistrado)
		prieto.recategorizate()
		ursula.compra(prieto,new MascaraOscura())
		assert.equals(ursula.monedas(),88.25)	
	}
	
	test "Ursula comienza con 100 monedas. Luego compra la máscara oscura a fermenpin recategorizada, le quedan 88.25"{
		var ursula = new Personaje(monedas = 100,pesoMaximo=200)
		var fermepin = new Comerciante(tipoComerciante = tipoComercianteImpuestoGanancia)
		fermepin.recategorizate()
		ursula.compra(fermepin,new MascaraOscura())
		assert.equals(ursula.monedas(),88.25)	
	}
	
}
